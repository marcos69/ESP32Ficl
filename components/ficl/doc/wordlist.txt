!       
#       
#>      
#s      
'
(       
(+loop) 
(.")    
(2constant)     
(2literal)      
(2local)        
(;)     
(?do)   
(@2Local)       
(@2Local0)      
(@f2Local)      
(@fLocal)       
(@local)
(@local0)       
(@local1)       
(To2Local0)     
(branch)        
(branch-final)
(branch0)       
(branch0-final) 
(c")    
(constant)
(create)
(do)    
(does)  
(exit)  
(f2constant)    
(f2local)       
(fconstant)     
(fliteral)      
(flocal)        
(link)  
(literal)       
(local) 
(loop)  
(of)    
(parse-step)    
(to2Local)      
(toF2Local)     
(toFLocal)      
(toLocal)
(toLocal0)      
(toLocal1)      
(unlink)        
(user)  
(variable)      
*       
** (colon) **   
** do-does **   
*/      
*/mod   
+       
+!      
+loop   
,       
-       
-roll   
-rot    
.       
."      
.(      
.env    
.hash   
.s      
.s-simple       
.ver    
/       
/mod    
0<      
0<>     
0=      
0>      
1+      
1-      
2!      
2*      
2+      
2-      
2/      
2>r     
2@      
2constant       
2drop   
2dup    
2literal        
2local  
2over   
2r>     
2r@     
2swap   
2value  
2variable       
:       
:noname 
;       
<       
<#      
<>      
<prefixes>      
=       
>       
>body   
>float  
>in     
>name   
>number 
>r      
>search 
?       
?do     
?dup    
?float  
?number 
?object 
?prefix 
?word   
@       
[       
[']     
[char]  
[else]  
[endif] 
[if]    
[then]  
\       
]       
__tempbase      
abort   
abort"  
abs     
accept  
add-parse-step  
again   
align   
aligned
allocate        
allot   
also    
and     
base    
begin   
bin     
bl      
body>   
brand-wordlist  
break   
bye     
c!      
c"      
c,      
c@      
case    
catch   
cd      
cell+   
cell-   
cells   
char    
char+   
chars   
clock   
clocks/sec      
close-file      
compare 
compare-insensitive
compile,        
compile-only    
constant        
convert 
count   
cr      
create  
create-file     
debug   
debug-xt        
decimal 
definitions     
delete-file     
depth   
dnegate 
do      
do-vocabulary
doLocal 
does>   
drop    
dump    
dup     
else    
emit    
empty   
end-locals      
end-prefixes    
endcase 
endif   
endof   
env-2constant
env-constant
environment?    
erase   
evaluate        
execute 
exit    
exit-inner      
expect  
f!      
f*      
f*i     
f+      
f+!     
f+i     
f-      
f-i     
f-roll  
f-rot   
f.      
f.s     
f/      
f/i     
f0<     
f0=     
f0>     
f2!     
f2@     
f2constant      
f2drop  
f2dup   
f2over  
f2swap  
f2value
f<      
f=      
f>      
f?dup   
f@      
fallthrough
false   
fconstant       
fdepth  
fdrop   
fdup    
fe.     
ficl-named-wordlist     
ficl-set-current        
ficl-vocabulary 
ficl-wordlist   
ficlInstruction0        
ficlInstruction1
ficlInstruction10
ficlInstruction11       
ficlInstruction12       
ficlInstruction13       
ficlInstruction14       
ficlInstruction15       
ficlInstruction16
ficlInstruction2        
ficlInstruction3
ficlInstruction4        
ficlInstruction5        
ficlInstruction6        
ficlInstruction7
ficlInstruction8        
ficlInstruction9
ficlInstructionExitInnerLoop
ficlInstructionF0       
ficlInstructionF1       
ficlInstructionFNeg1
ficlInstructionInvalid  
ficlInstructionNeg1     
ficlInstructionNeg10    
ficlInstructionNeg11    
ficlInstructionNeg12    
ficlInstructionNeg13    
ficlInstructionNeg14    
ficlInstructionNeg15
ficlInstructionNeg16    
ficlInstructionNeg2     
ficlInstructionNeg3     
ficlInstructionNeg4     
ficlInstructionNeg5     
ficlInstructionNeg6
ficlInstructionNeg7     
ficlInstructionNeg8
ficlInstructionNeg9     
file-position   
file-size       
file-status     
fill    
find    
fliteral        
float>  
float>int
flush-file      
fm/mod  
fnegate 
forget  
forget-wid      
forth   
forth-wordlist
fover   
fpick   
free    
froll   
frot    
fswap   
fvalue  
get-current     
get-msecs       
get-order       
hash    
here    
hex     
hidden  
hide    
hold    
i       
i-f     
i/f     
if      
immediate       
include 
include-file    
included        
int>float
interpret
invert  
j       
k       
last-word       
leave   
literal
load    
local   
locals| 
lookup  
loop    
lshift  
m*      
marker  
max     
min     
mod     
move    
nUser   
negate  
nip     
objectify
of      
on-step 
only    
oo      
oop     
open-file       
or      
order   
over    
pad     
parse   
parse-order     
parse-word      
pick    
postpone        
previous        
pwd     
q!      
q@      
quit    
r.s     
r/o     
r/w     
r>      
r@      
random  
read-file       
read-line       
recurse 
refill  
rename-file     
repeat  
reposition-file 
resize  
resize-file     
roll    
rot     
rshift  
s"      
s>d     
save-current
search-wordlist 
search> 
see     
see-xt  
seed-random     
set-current     
set-order       
sfind   
show-prefixes   
sign    
sliteral        
sm/rem  
source  
source-id       
space   
spaces  
span    
spewhash        
sprintf 
start-prefixes
state   
step-break      
strcat  
strcpy  
strdup  
strlen  
swap    
system  
then    
throw   
to      
true    
tuck    
type    
u.      
u<      
um*     
um/mod  
unloop  
until   
user    
value   
variable        
vocabulary      
w!      
w/o     
w@      
while   
wid-get-name    
wid-set-name    
wid-set-super   
within  
word    
wordlist        
words   
write-file      
write-line      
x.      
xor     
{       
{{      
